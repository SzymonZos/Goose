name: CMake builds for Mac and Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_run:
    workflows: [ Amalgamate Goose ]
    types: [ completed ]
  workflow_dispatch:

jobs:
  build:
    name: ${{matrix.os}}, ${{matrix.compiler}}, ${{matrix.build_type}}, C++${{matrix.cpp_std}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        compiler: [ gcc, clang ]
        build_type: [ Release, Debug ]
        cpp_std: [ "17", "20" ]

    steps:
      - name: Initial checkout
        uses: actions/checkout@v3

      - name: "[Release] Check status of Amalgamate Goose"
        env:
          IS_RELEASE: ${{ startsWith(github.ref, 'refs/tags/v') }}
          PREV_WORKFLOW_FAILED: ${{ github.event.workflow_run.conclusion == 'failure' }}
          SHOULD_FAIL: ${{ env.IS_RELEASE == 'true' && env.PREV_WORKFLOW_FAILED == 'true' }}
        if: ${{ env.SHOULD_FAIL == 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Amalgamate Goose workflow failed during release')

      - name: "[Release] Download single header Goose"
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: amalgamate.yml
          name: goose-all
        if: ${{ env.IS_RELEASE == 'true' }}

      - name: "[Release] Replace Goose with amalgamated single header"
        run: mv -f goose.hpp ./include/gos/goose.hpp
        if: ${{ env.IS_RELEASE == 'true' }}

      - name: Configure compiler
        run: ./ci/config_compiler.sh ${{matrix.compiler}}

      - name: Configure CMake
        run: >
          cmake -B ${{github.workspace}}/build
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
          -DCMAKE_C_COMPILER=${{env.CC}}
          -DCMAKE_CXX_COMPILER=${{env.CXX}}
          -DGOS_BUILD_TESTS=ON
          -DGOS_CXX_STANDARD=${{matrix.cpp_std}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} -- -j 4

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ./test/test-goose
